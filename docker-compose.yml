version: "3"
networks:
  dev-net:
    driver: bridge
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/app/wwwroot/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    restart: always
    networks:
      - dev-net

  php:
    image: ${PHP_ADDRESS}
    container_name: php 
    ports:
      - "${PHP_HOST_PORT}:${PHP_DOCKER_HOST_PORT}"
    volumes:
      - ${SOURCE_DIR}:/app/wwwroot/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - dev-net

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    networks:
      - dev-net
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      - dev-net
      
  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - dev-net

#  phpredisadmin:
#    image: erikdubbelboer/phpredisadmin:latest
#    container_name: phpredisadmin
#    networks:
#      - dev-net
#    environment:
#      - REDIS_1_HOST=redis
#      - REDIS_1_PORT=6379
    
  postgres:
     image: postgres
     container_name: postgres
     ports:
        - "5432:5432"
     networks:
       - dev-net 
     environment:
       - POSTGRES_USER=sonar 
       - POSTGRES_PASSWORD=sonar

  sonarqube:
      image: jamesz2011/sonarqube6.7:latest
      container_name: sonarqube
      networks:
        - dev-net
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${SOURCE_DIR}:/app/wwwroot/:rw
      environment:
        - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar 